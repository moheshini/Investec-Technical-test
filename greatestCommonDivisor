//The recursive gcd is most common. I initially wanted to do this a different way. 
//Sort the number and mod the second number by the first. If it is 0 then the try all the other numbers with the smallest. 
//If they all divide then, you have your GCD. If not, it is 1. Unit test failed and logic failed when faced with something like {6,9,12}
//So I went for the usual gcd method of solving the problem.

package javaapplication4;

/**
 *
 * @author moh_raj
 */
public class JavaApplication4
{

    public static int gcd(int a, int b)
    {
        if (a == 0)
        {
            return b;
        }
        
        return gcd(b % a, a);
    }

    public static int gcdArray(int arr[], int n)
    {
        int result = arr[0];
        for (int i = 1; i < n; i++)
        {
            result = gcd(arr[i], result);
        }

        return result;
    }

    public static void main(String[] args)
    {
        int arr[] =
        {
            5, 5, 7
        };
        int n = arr.length;
        System.out.println(gcdArray(arr, n));
    }

}
